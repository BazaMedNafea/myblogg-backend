datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  userId    String    @id @default(cuid())
  email     String    @unique
  username  String?   @unique
  password  String
  fullName  String
  bio       String?
  posts     Post[] // One-to-many relationship with Post
  sessions  Session[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Session {
  sessionId String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [userId], onDelete: Cascade)
  userAgent String?
  createdAt DateTime @default(now())
  expiresAt DateTime
}

model Post {
  postId     Int       @id @default(autoincrement())
  title      String
  content    String
  published  Boolean   @default(false)
  author     User      @relation(fields: [authorId], references: [userId])
  authorId   String // Each post is authored by a single user
  category   Category? @relation(fields: [categoryId], references: [categoryId], onDelete: SetNull)
  categoryId Int?
  tag        Tag?      @relation(fields: [tagId], references: [tagId], onDelete: SetNull)
  tagId      Int?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@map("posts")
}

model Category {
  categoryId Int      @id @default(autoincrement())
  name       String   @unique
  posts      Post[] // One-to-many with Post
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("categories")
}

model Tag {
  tagId     Int      @id @default(autoincrement())
  name      String   @unique
  posts     Post[] // One-to-many with Post
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("tags")
}
